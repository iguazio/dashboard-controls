{
    "AFTER_SERVICE_DEPLOYED_FUNCTIONS_MSG": "After this service is successfully deployed, refresh your screen to see the new \"Functions\" icon on the left navigation menu.",
    "AFTER_SERVICE_DEPLOYED_LOGS_MSG": "After this service is successfully deployed, refresh your screen to see the new \"Logs\" icon on the left navigation menu.",
    "API": "API",
    "APPLIED_TO_EACH_REPLICA_MSG": "The memory and CPU configurations are applied to each replica",
    "APPLYING_FAILED_MSG": "Service configuration update failed",
    "APPLYING_IN_PROGRESS_MSG": "Updating service configuration…",
    "APPLYING_SUCCEEDED_MSG": "Service configuration updated successfully",
    "CANNOT_BE_UNDONE": "Warning: this cannot be undone.",
    "CERTIFICATE": "Certificate",
    "CLOSE_WIZARD_CONFIRM": "If you choose to quit this process, all the information will <br>be lost. Are you sure you want to quit?",
    "COMMON_PARAMETERS": "Common Parameters",
    "CREATE_NEW": "Create new...",
    "CREATE_NEW_SERVICE": "Create a new service",
    "CREATE_SERVICE": "Create Service",
    "CURRENT": "Current",
    "CUSTOM_PARAMETERS": "Custom Parameters",
    "DATA_ACCESS_USER_DESCRIPTION": "This username is served for Pipelines to access the data in Iguazio data container.",
    "DELETE_RESTART_UPDATE_MSG": "Deleting, restarting or updating a service stops all active jobs for this service.",
    "DELETE_SERVICE_CONFIRM": "Marking the service for deletion will discard the pending configuration changes for this service.",
    "DESCRIPTION_MSG": "A short description of the service instance",
    "DOCKER_REGISTRY": "Docker Registry",
    "EDIT_SERVICE": "Edit service",
    "ELASTICSEARCH": "Elasticsearch",
    "ELASTICSEARCH_URL": "Elasticsearch URL",
    "ENABLE_HIVE": "Enable Hive",
    "ERROR_MSG": {
        "GET_SERVICES": "Unknown error occurred while getting services",
        "MODIFICATION_JOB": "Your pending changes aren't synchronized with the latest services state.\n Discard your changes and refresh the list before making new changes.",
        "SERVICES_UPDATING_TASK": "Timed out waiting for the service-configuration update to complete. Refresh the page periodically to see the latest state.",
        "UPDATE_SERVICES": {
            "NOT_READY": "Some or all services failed to update",
            "UNKNOWN": "One or more services returned unknown status after deployment. Please check the logs"
        }
    },
    "FLAVOR": "Flavor",
    "FLAVOR_WAS_CHANGED_TO": "Flavor was changed to",
    "HIVE_METASTORE_CONTAINER_DESCRIPTION": "The name of the data container that contains the Hive Metastore",
    "HIVE_METASTORE_PATH": "Hive Metastore path",
    "HIVE_METASTORE_PATH_DESCRIPTION": "The relative path to the Hive Metastore within the configured container.\r\nIf the path doesn’t exist, it will be created by the platform",
    "INGESTION_RATE": "Ingestion rate",
    "INSTALL_DASHBOARD": "Install dashboard",
    "JAVA_KEYSTORE": "Java KeyStore (JKS)",
    "JKS_PASSWORD": "JKS Password",
    "KUBERNETES_DOCUMENTATION": "Kubernetes documentation",
    "LIMIT_DESCRIPTION": "Setting a limit without setting Request means that Kubernetes will take the entire resources when the service is up.",
    "MORE_ABOUT_RESOURCE_PARAMETERS": "For more information about the resource parameters, see ",
    "NAMES_MUST_BE_UNIQUE": "Names must be unique to the new service \n Must be 1 to 128 characters long",
    "NEW_SERVICE": "New service",
    "NOT_AVAILABLE": "Not available",
    "NUCLIO_PROJECT": "Nuclio Project",
    "NUCLIO_PROJECT_DESCRIPTION": "When the service is created, a new Nuclio project with the generated functions will be created and visible in the dashboard Functions page.<br> The project name will be \"TSDB functions (tsdb-nuclio-&lt;k8s service pod ID&gt;)\".",
    "NUMBER_OF_WORKERS": "Number of workers",
    "OFF_CLUSTER_DOCKER_REGISTRY": "Off-Cluster Docker Registry",
    "OFF_CLUSTER_DOCKER_REGISTRY_DESCRIPTION": "Configure the remote Docker Registry that will be used by the service. Note that the registry must already exist in the configured location.",
    "ON_CLUSTER_DOCKER_REGISTRY": "On-Cluster Docker Registry",
    "ON_CLUSTER_DOCKER_REGISTRY_DESCRIPTION": "The service will use the Docker Registry that's pre-deployed locally on the cluster.",
    "PLACEHOLDER": {
        "SELECT_FLAVOR": "Select a flavor...",
        "SELECT_SPARK": "Select a spark...",
        "SOME_ENV_VAR_KEY": "some.envVar-name_123",
        "SOME_ENV_VAR_VALUE": "Some env var value",
        "WRITE_SERVICE_NAME": "Write service name..."
    },
    "PLATFORM_DATA_ACCESS_USER": "Platform data-access user",
    "PLATFORM_DATA_ACCESS_USER_GRAFANA_DESCRIPTION": "A user with data access to the platform's data containers. This is required for defining the \"iguazio\" data source for accessing platform data from Grafana.",
    "PLATFORM_DATA_ACCESS_USER_PIPELINES_DESCRIPTION": "A user with data access to the platform's data containers. This is required for defining the \"iguazio\" data source for accessing platform data from Pipelines.",
    "PRESTO_KEYS": "Presto keys",
    "REFRESH_SERVICES_CONFIRM": "You have unsaved changes. Refreshing the list will discard your changes.",
    "RESTART_V3IO_MSG": "Restarting the V3IO Daemon service also restarts all dependent services, such as Spark or Presto.",
    "RESTART_WEB_API_MSG": "Restarting the Web APIs service also restarts and impacts all dependent services, such as Nuclio..",
    "RUNNING_USER": "Running User",
    "RUNNING_USER_DESCRIPTION": "The username of the service’s running user (owner). The running user must have the “Data” management policy.",
    "SAVE_SERVICE": "Save service",
    "SERVICE_ACCOUNTS": "Service accounts",
    "SERVICE_NAME": "Service name",
    "SERVICE_PROVIDED_AS_TECH_PREVIEW": "This service is provided only as Tech Preview and isn't fully supported.",
    "SERVICE_TYPE": "Service type",
    "SERVICES_NOT_FOUND": "No services have been found...",
    "SET_URL_FOR_CLOUD": "Set URL for Cloud",
    "SHARED": "Shared",
    "SHARED_DESCRIPTION": "Select this option to share the service with other users. By default, only the running user has access.",
    "STEP1_TITLE": "Configure your service",
    "SYSTEM_DEFAULT_MSG": "System default will be set if this field is empty.",
    "TABLE_PATH": "Table path",
    "TABLE_PATH_DESCRIPTION": "The relative path to an existing TSDB table within the configured container.",
    "TARGET_CPU_DESCRIPTION": "Exceeding this threshold will increase the number of replicas.",
    "TOOLTIP": {
        "CHANGES_REQUESTED": "Changes requested",
        "DELETION_REQUESTED": "Deletion requested",
        "DISABLED_FLAVOR": "Clear GPU field in previous step to enable this flavor",
        "ENV_VAR_1": "Must consist of alphanumeric characters ('a-z', 'A-Z'), underscores ('_'), hyphens ('-'), or dots('.')",
        "ENV_VAR_2": "Must not start with a digit",
        "ENV_VAR_3": "Must not equal to a single dot ('.') or double-dot ('..'), or start with a double-dot ('..')",
        "ENV_VAR_4": "Examples: 'my.env-name', 'MY_ENV.NAME', 'MyEnvName1'",
        "REPLICAS": "Number of replicas; controls the number of {{kindName}} workers'",
        "RESTART_REQUESTED": "Restart requested",
        "SINGLE_INSTANCE_SERVICE": "This is a single-instance service type. A service of this type is already defined."
    },
    "TSDB_CONTAINER_DESCRIPTION": "The name of the data container that contains the TSDB table.",
    "TSDB_TABLE": "Time-Series Database (TSDB) Table",
    "TSDB_TABLE_NUCLIO_DESCRIPTION": "Configure the TSDB table for the generated Nuclio functions.<br> The table must already exist in the specified location. To learn how to create the table, see the ",
    "TSDB_TABLE_PROMETHEUS_DESCRIPTION": "Configure the TSDB table for the generated Prometheus dashboard.<br> The table must already exist in the specified location. To learn how to create the table, see the ",
    "UI": "UI",
    "USERNAME_DESCRIPTION": "The name of a platform user for creating and accessing the Hive Metastore",
    "V3IO_TSDB_DOCUMENTATION": "V3IO TSDB documentation",
    "YOURE_ALL_SET": "You're all set"
}
